/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the Bill type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Bill{}

// Bill A total bill for a single organization.
type Bill struct {
	OrganizationId string `json:"organization_id"`
	StartTime time.Time `json:"start_time"`
	EndTime time.Time `json:"end_time"`
	TotalPrice string `json:"total_price"`
	Currency Currency `json:"currency"`
	MarginMultiplier string `json:"margin_multiplier"`
	Items []BillItem `json:"items"`
}

type _Bill Bill

// NewBill instantiates a new Bill object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBill(organizationId string, startTime time.Time, endTime time.Time, totalPrice string, currency Currency, marginMultiplier string, items []BillItem) *Bill {
	this := Bill{}
	this.OrganizationId = organizationId
	this.StartTime = startTime
	this.EndTime = endTime
	this.TotalPrice = totalPrice
	this.Currency = currency
	this.MarginMultiplier = marginMultiplier
	this.Items = items
	return &this
}

// NewBillWithDefaults instantiates a new Bill object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillWithDefaults() *Bill {
	this := Bill{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value
func (o *Bill) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *Bill) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *Bill) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetStartTime returns the StartTime field value
func (o *Bill) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *Bill) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *Bill) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *Bill) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *Bill) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *Bill) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetTotalPrice returns the TotalPrice field value
func (o *Bill) GetTotalPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalPrice
}

// GetTotalPriceOk returns a tuple with the TotalPrice field value
// and a boolean to check if the value has been set.
func (o *Bill) GetTotalPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPrice, true
}

// SetTotalPrice sets field value
func (o *Bill) SetTotalPrice(v string) {
	o.TotalPrice = v
}

// GetCurrency returns the Currency field value
func (o *Bill) GetCurrency() Currency {
	if o == nil {
		var ret Currency
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *Bill) GetCurrencyOk() (*Currency, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *Bill) SetCurrency(v Currency) {
	o.Currency = v
}

// GetMarginMultiplier returns the MarginMultiplier field value
func (o *Bill) GetMarginMultiplier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MarginMultiplier
}

// GetMarginMultiplierOk returns a tuple with the MarginMultiplier field value
// and a boolean to check if the value has been set.
func (o *Bill) GetMarginMultiplierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarginMultiplier, true
}

// SetMarginMultiplier sets field value
func (o *Bill) SetMarginMultiplier(v string) {
	o.MarginMultiplier = v
}

// GetItems returns the Items field value
func (o *Bill) GetItems() []BillItem {
	if o == nil {
		var ret []BillItem
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *Bill) GetItemsOk() ([]BillItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *Bill) SetItems(v []BillItem) {
	o.Items = v
}

func (o Bill) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Bill) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["start_time"] = o.StartTime
	toSerialize["end_time"] = o.EndTime
	toSerialize["total_price"] = o.TotalPrice
	toSerialize["currency"] = o.Currency
	toSerialize["margin_multiplier"] = o.MarginMultiplier
	toSerialize["items"] = o.Items
	return toSerialize, nil
}

func (o *Bill) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"organization_id",
		"start_time",
		"end_time",
		"total_price",
		"currency",
		"margin_multiplier",
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBill := _Bill{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBill)

	if err != nil {
		return err
	}

	*o = Bill(varBill)

	return err
}

type NullableBill struct {
	value *Bill
	isSet bool
}

func (v NullableBill) Get() *Bill {
	return v.value
}

func (v *NullableBill) Set(val *Bill) {
	v.value = val
	v.isSet = true
}

func (v NullableBill) IsSet() bool {
	return v.isSet
}

func (v *NullableBill) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBill(val *Bill) *NullableBill {
	return &NullableBill{value: val, isSet: true}
}

func (v NullableBill) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBill) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


