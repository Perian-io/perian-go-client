/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
)

// checks if the PaginationMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginationMetadata{}

// PaginationMetadata Model for pagination metadata.
type PaginationMetadata struct {
	TotalItems *int32 `json:"total_items,omitempty"`
	ItemsPerPage *int32 `json:"items_per_page,omitempty"`
	CurrentPage *int32 `json:"current_page,omitempty"`
	TotalPages *int32 `json:"total_pages,omitempty"`
	NextPage NullableInt32 `json:"next_page,omitempty"`
	PreviousPage NullableInt32 `json:"previous_page,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaginationMetadata PaginationMetadata

// NewPaginationMetadata instantiates a new PaginationMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginationMetadata() *PaginationMetadata {
	this := PaginationMetadata{}
	var totalItems int32 = 0
	this.TotalItems = &totalItems
	var itemsPerPage int32 = 25
	this.ItemsPerPage = &itemsPerPage
	var currentPage int32 = 1
	this.CurrentPage = &currentPage
	var totalPages int32 = 1
	this.TotalPages = &totalPages
	return &this
}

// NewPaginationMetadataWithDefaults instantiates a new PaginationMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginationMetadataWithDefaults() *PaginationMetadata {
	this := PaginationMetadata{}
	var totalItems int32 = 0
	this.TotalItems = &totalItems
	var itemsPerPage int32 = 25
	this.ItemsPerPage = &itemsPerPage
	var currentPage int32 = 1
	this.CurrentPage = &currentPage
	var totalPages int32 = 1
	this.TotalPages = &totalPages
	return &this
}

// GetTotalItems returns the TotalItems field value if set, zero value otherwise.
func (o *PaginationMetadata) GetTotalItems() int32 {
	if o == nil || IsNil(o.TotalItems) {
		var ret int32
		return ret
	}
	return *o.TotalItems
}

// GetTotalItemsOk returns a tuple with the TotalItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationMetadata) GetTotalItemsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalItems) {
		return nil, false
	}
	return o.TotalItems, true
}

// HasTotalItems returns a boolean if a field has been set.
func (o *PaginationMetadata) HasTotalItems() bool {
	if o != nil && !IsNil(o.TotalItems) {
		return true
	}

	return false
}

// SetTotalItems gets a reference to the given int32 and assigns it to the TotalItems field.
func (o *PaginationMetadata) SetTotalItems(v int32) {
	o.TotalItems = &v
}

// GetItemsPerPage returns the ItemsPerPage field value if set, zero value otherwise.
func (o *PaginationMetadata) GetItemsPerPage() int32 {
	if o == nil || IsNil(o.ItemsPerPage) {
		var ret int32
		return ret
	}
	return *o.ItemsPerPage
}

// GetItemsPerPageOk returns a tuple with the ItemsPerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationMetadata) GetItemsPerPageOk() (*int32, bool) {
	if o == nil || IsNil(o.ItemsPerPage) {
		return nil, false
	}
	return o.ItemsPerPage, true
}

// HasItemsPerPage returns a boolean if a field has been set.
func (o *PaginationMetadata) HasItemsPerPage() bool {
	if o != nil && !IsNil(o.ItemsPerPage) {
		return true
	}

	return false
}

// SetItemsPerPage gets a reference to the given int32 and assigns it to the ItemsPerPage field.
func (o *PaginationMetadata) SetItemsPerPage(v int32) {
	o.ItemsPerPage = &v
}

// GetCurrentPage returns the CurrentPage field value if set, zero value otherwise.
func (o *PaginationMetadata) GetCurrentPage() int32 {
	if o == nil || IsNil(o.CurrentPage) {
		var ret int32
		return ret
	}
	return *o.CurrentPage
}

// GetCurrentPageOk returns a tuple with the CurrentPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationMetadata) GetCurrentPageOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentPage) {
		return nil, false
	}
	return o.CurrentPage, true
}

// HasCurrentPage returns a boolean if a field has been set.
func (o *PaginationMetadata) HasCurrentPage() bool {
	if o != nil && !IsNil(o.CurrentPage) {
		return true
	}

	return false
}

// SetCurrentPage gets a reference to the given int32 and assigns it to the CurrentPage field.
func (o *PaginationMetadata) SetCurrentPage(v int32) {
	o.CurrentPage = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *PaginationMetadata) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginationMetadata) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *PaginationMetadata) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *PaginationMetadata) SetTotalPages(v int32) {
	o.TotalPages = &v
}

// GetNextPage returns the NextPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginationMetadata) GetNextPage() int32 {
	if o == nil || IsNil(o.NextPage.Get()) {
		var ret int32
		return ret
	}
	return *o.NextPage.Get()
}

// GetNextPageOk returns a tuple with the NextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginationMetadata) GetNextPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextPage.Get(), o.NextPage.IsSet()
}

// HasNextPage returns a boolean if a field has been set.
func (o *PaginationMetadata) HasNextPage() bool {
	if o != nil && o.NextPage.IsSet() {
		return true
	}

	return false
}

// SetNextPage gets a reference to the given NullableInt32 and assigns it to the NextPage field.
func (o *PaginationMetadata) SetNextPage(v int32) {
	o.NextPage.Set(&v)
}
// SetNextPageNil sets the value for NextPage to be an explicit nil
func (o *PaginationMetadata) SetNextPageNil() {
	o.NextPage.Set(nil)
}

// UnsetNextPage ensures that no value is present for NextPage, not even an explicit nil
func (o *PaginationMetadata) UnsetNextPage() {
	o.NextPage.Unset()
}

// GetPreviousPage returns the PreviousPage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginationMetadata) GetPreviousPage() int32 {
	if o == nil || IsNil(o.PreviousPage.Get()) {
		var ret int32
		return ret
	}
	return *o.PreviousPage.Get()
}

// GetPreviousPageOk returns a tuple with the PreviousPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginationMetadata) GetPreviousPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviousPage.Get(), o.PreviousPage.IsSet()
}

// HasPreviousPage returns a boolean if a field has been set.
func (o *PaginationMetadata) HasPreviousPage() bool {
	if o != nil && o.PreviousPage.IsSet() {
		return true
	}

	return false
}

// SetPreviousPage gets a reference to the given NullableInt32 and assigns it to the PreviousPage field.
func (o *PaginationMetadata) SetPreviousPage(v int32) {
	o.PreviousPage.Set(&v)
}
// SetPreviousPageNil sets the value for PreviousPage to be an explicit nil
func (o *PaginationMetadata) SetPreviousPageNil() {
	o.PreviousPage.Set(nil)
}

// UnsetPreviousPage ensures that no value is present for PreviousPage, not even an explicit nil
func (o *PaginationMetadata) UnsetPreviousPage() {
	o.PreviousPage.Unset()
}

func (o PaginationMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginationMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalItems) {
		toSerialize["total_items"] = o.TotalItems
	}
	if !IsNil(o.ItemsPerPage) {
		toSerialize["items_per_page"] = o.ItemsPerPage
	}
	if !IsNil(o.CurrentPage) {
		toSerialize["current_page"] = o.CurrentPage
	}
	if !IsNil(o.TotalPages) {
		toSerialize["total_pages"] = o.TotalPages
	}
	if o.NextPage.IsSet() {
		toSerialize["next_page"] = o.NextPage.Get()
	}
	if o.PreviousPage.IsSet() {
		toSerialize["previous_page"] = o.PreviousPage.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaginationMetadata) UnmarshalJSON(data []byte) (err error) {
	varPaginationMetadata := _PaginationMetadata{}

	err = json.Unmarshal(data, &varPaginationMetadata)

	if err != nil {
		return err
	}

	*o = PaginationMetadata(varPaginationMetadata)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "total_items")
		delete(additionalProperties, "items_per_page")
		delete(additionalProperties, "current_page")
		delete(additionalProperties, "total_pages")
		delete(additionalProperties, "next_page")
		delete(additionalProperties, "previous_page")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaginationMetadata struct {
	value *PaginationMetadata
	isSet bool
}

func (v NullablePaginationMetadata) Get() *PaginationMetadata {
	return v.value
}

func (v *NullablePaginationMetadata) Set(val *PaginationMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginationMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginationMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginationMetadata(val *PaginationMetadata) *NullablePaginationMetadata {
	return &NullablePaginationMetadata{value: val, isSet: true}
}

func (v NullablePaginationMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginationMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


