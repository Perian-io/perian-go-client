/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
	"fmt"
)

// Response400GetJobById struct for Response400GetJobById
type Response400GetJobById struct {
	DefaultClientError *DefaultClientError
	NoJobFoundError *NoJobFoundError
	NoParameterError *NoParameterError
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *Response400GetJobById) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into DefaultClientError
	err = json.Unmarshal(data, &dst.DefaultClientError);
	if err == nil {
		jsonDefaultClientError, _ := json.Marshal(dst.DefaultClientError)
		if string(jsonDefaultClientError) == "{}" { // empty struct
			dst.DefaultClientError = nil
		} else {
			return nil // data stored in dst.DefaultClientError, return on the first match
		}
	} else {
		dst.DefaultClientError = nil
	}

	// try to unmarshal JSON data into NoJobFoundError
	err = json.Unmarshal(data, &dst.NoJobFoundError);
	if err == nil {
		jsonNoJobFoundError, _ := json.Marshal(dst.NoJobFoundError)
		if string(jsonNoJobFoundError) == "{}" { // empty struct
			dst.NoJobFoundError = nil
		} else {
			return nil // data stored in dst.NoJobFoundError, return on the first match
		}
	} else {
		dst.NoJobFoundError = nil
	}

	// try to unmarshal JSON data into NoParameterError
	err = json.Unmarshal(data, &dst.NoParameterError);
	if err == nil {
		jsonNoParameterError, _ := json.Marshal(dst.NoParameterError)
		if string(jsonNoParameterError) == "{}" { // empty struct
			dst.NoParameterError = nil
		} else {
			return nil // data stored in dst.NoParameterError, return on the first match
		}
	} else {
		dst.NoParameterError = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(Response400GetJobById)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *Response400GetJobById) MarshalJSON() ([]byte, error) {
	if src.DefaultClientError != nil {
		return json.Marshal(&src.DefaultClientError)
	}

	if src.NoJobFoundError != nil {
		return json.Marshal(&src.NoJobFoundError)
	}

	if src.NoParameterError != nil {
		return json.Marshal(&src.NoParameterError)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableResponse400GetJobById struct {
	value *Response400GetJobById
	isSet bool
}

func (v NullableResponse400GetJobById) Get() *Response400GetJobById {
	return v.value
}

func (v *NullableResponse400GetJobById) Set(val *Response400GetJobById) {
	v.value = val
	v.isSet = true
}

func (v NullableResponse400GetJobById) IsSet() bool {
	return v.isSet
}

func (v *NullableResponse400GetJobById) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponse400GetJobById(val *Response400GetJobById) *NullableResponse400GetJobById {
	return &NullableResponse400GetJobById{value: val, isSet: true}
}

func (v NullableResponse400GetJobById) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponse400GetJobById) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


