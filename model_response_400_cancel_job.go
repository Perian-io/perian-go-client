/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
	"fmt"
)


// Response400CancelJob struct for Response400CancelJob
type Response400CancelJob struct {
	DefaultClientError *DefaultClientError
	JobAlreadyDoneError *JobAlreadyDoneError
	NoJobFoundError *NoJobFoundError
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *Response400CancelJob) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into DefaultClientError
	err = json.Unmarshal(data, &dst.DefaultClientError);
	if err == nil {
		jsonDefaultClientError, _ := json.Marshal(dst.DefaultClientError)
		if string(jsonDefaultClientError) == "{}" { // empty struct
			dst.DefaultClientError = nil
		} else {
			return nil // data stored in dst.DefaultClientError, return on the first match
		}
	} else {
		dst.DefaultClientError = nil
	}

	// try to unmarshal JSON data into JobAlreadyDoneError
	err = json.Unmarshal(data, &dst.JobAlreadyDoneError);
	if err == nil {
		jsonJobAlreadyDoneError, _ := json.Marshal(dst.JobAlreadyDoneError)
		if string(jsonJobAlreadyDoneError) == "{}" { // empty struct
			dst.JobAlreadyDoneError = nil
		} else {
			return nil // data stored in dst.JobAlreadyDoneError, return on the first match
		}
	} else {
		dst.JobAlreadyDoneError = nil
	}

	// try to unmarshal JSON data into NoJobFoundError
	err = json.Unmarshal(data, &dst.NoJobFoundError);
	if err == nil {
		jsonNoJobFoundError, _ := json.Marshal(dst.NoJobFoundError)
		if string(jsonNoJobFoundError) == "{}" { // empty struct
			dst.NoJobFoundError = nil
		} else {
			return nil // data stored in dst.NoJobFoundError, return on the first match
		}
	} else {
		dst.NoJobFoundError = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(Response400CancelJob)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src Response400CancelJob) MarshalJSON() ([]byte, error) {
	if src.DefaultClientError != nil {
		return json.Marshal(&src.DefaultClientError)
	}

	if src.JobAlreadyDoneError != nil {
		return json.Marshal(&src.JobAlreadyDoneError)
	}

	if src.NoJobFoundError != nil {
		return json.Marshal(&src.NoJobFoundError)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableResponse400CancelJob struct {
	value *Response400CancelJob
	isSet bool
}

func (v NullableResponse400CancelJob) Get() *Response400CancelJob {
	return v.value
}

func (v *NullableResponse400CancelJob) Set(val *Response400CancelJob) {
	v.value = val
	v.isSet = true
}

func (v NullableResponse400CancelJob) IsSet() bool {
	return v.isSet
}

func (v *NullableResponse400CancelJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponse400CancelJob(val *Response400CancelJob) *NullableResponse400CancelJob {
	return &NullableResponse400CancelJob{value: val, isSet: true}
}

func (v NullableResponse400CancelJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponse400CancelJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


