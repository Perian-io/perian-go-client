/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
)

// checks if the GetInstanceTypesSuccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInstanceTypesSuccess{}

// GetInstanceTypesSuccess Response model for successful instance type request.
type GetInstanceTypesSuccess struct {
	Status *string `json:"status,omitempty"`
	Message *string `json:"message,omitempty"`
	Detail *string `json:"detail,omitempty"`
	StatusCode *int32 `json:"status_code,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	No *int32 `json:"no,omitempty"`
	InstanceTypes []InstanceTypeView `json:"instance_types,omitempty"`
	Pagination *PaginationMetadata `json:"pagination,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetInstanceTypesSuccess GetInstanceTypesSuccess

// NewGetInstanceTypesSuccess instantiates a new GetInstanceTypesSuccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInstanceTypesSuccess() *GetInstanceTypesSuccess {
	this := GetInstanceTypesSuccess{}
	var status string = "Success"
	this.Status = &status
	var message string = "Operation was successful"
	this.Message = &message
	var detail string = ""
	this.Detail = &detail
	var statusCode int32 = 200
	this.StatusCode = &statusCode
	var limit int32 = 0
	this.Limit = &limit
	var no int32 = 0
	this.No = &no
	var pagination PaginationMetadata = *NewPaginationMetadata()
	this.Pagination = &pagination
	return &this
}

// NewGetInstanceTypesSuccessWithDefaults instantiates a new GetInstanceTypesSuccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInstanceTypesSuccessWithDefaults() *GetInstanceTypesSuccess {
	this := GetInstanceTypesSuccess{}
	var status string = "Success"
	this.Status = &status
	var message string = "Operation was successful"
	this.Message = &message
	var detail string = ""
	this.Detail = &detail
	var statusCode int32 = 200
	this.StatusCode = &statusCode
	var limit int32 = 0
	this.Limit = &limit
	var no int32 = 0
	this.No = &no
	var pagination PaginationMetadata = *NewPaginationMetadata()
	this.Pagination = &pagination
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetInstanceTypesSuccess) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypesSuccess) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetInstanceTypesSuccess) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetInstanceTypesSuccess) SetStatus(v string) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetInstanceTypesSuccess) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypesSuccess) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetInstanceTypesSuccess) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetInstanceTypesSuccess) SetMessage(v string) {
	o.Message = &v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *GetInstanceTypesSuccess) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypesSuccess) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *GetInstanceTypesSuccess) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *GetInstanceTypesSuccess) SetDetail(v string) {
	o.Detail = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *GetInstanceTypesSuccess) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypesSuccess) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *GetInstanceTypesSuccess) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *GetInstanceTypesSuccess) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *GetInstanceTypesSuccess) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypesSuccess) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *GetInstanceTypesSuccess) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *GetInstanceTypesSuccess) SetLimit(v int32) {
	o.Limit = &v
}

// GetNo returns the No field value if set, zero value otherwise.
func (o *GetInstanceTypesSuccess) GetNo() int32 {
	if o == nil || IsNil(o.No) {
		var ret int32
		return ret
	}
	return *o.No
}

// GetNoOk returns a tuple with the No field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypesSuccess) GetNoOk() (*int32, bool) {
	if o == nil || IsNil(o.No) {
		return nil, false
	}
	return o.No, true
}

// HasNo returns a boolean if a field has been set.
func (o *GetInstanceTypesSuccess) HasNo() bool {
	if o != nil && !IsNil(o.No) {
		return true
	}

	return false
}

// SetNo gets a reference to the given int32 and assigns it to the No field.
func (o *GetInstanceTypesSuccess) SetNo(v int32) {
	o.No = &v
}

// GetInstanceTypes returns the InstanceTypes field value if set, zero value otherwise.
func (o *GetInstanceTypesSuccess) GetInstanceTypes() []InstanceTypeView {
	if o == nil || IsNil(o.InstanceTypes) {
		var ret []InstanceTypeView
		return ret
	}
	return o.InstanceTypes
}

// GetInstanceTypesOk returns a tuple with the InstanceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypesSuccess) GetInstanceTypesOk() ([]InstanceTypeView, bool) {
	if o == nil || IsNil(o.InstanceTypes) {
		return nil, false
	}
	return o.InstanceTypes, true
}

// HasInstanceTypes returns a boolean if a field has been set.
func (o *GetInstanceTypesSuccess) HasInstanceTypes() bool {
	if o != nil && !IsNil(o.InstanceTypes) {
		return true
	}

	return false
}

// SetInstanceTypes gets a reference to the given []InstanceTypeView and assigns it to the InstanceTypes field.
func (o *GetInstanceTypesSuccess) SetInstanceTypes(v []InstanceTypeView) {
	o.InstanceTypes = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *GetInstanceTypesSuccess) GetPagination() PaginationMetadata {
	if o == nil || IsNil(o.Pagination) {
		var ret PaginationMetadata
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypesSuccess) GetPaginationOk() (*PaginationMetadata, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *GetInstanceTypesSuccess) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given PaginationMetadata and assigns it to the Pagination field.
func (o *GetInstanceTypesSuccess) SetPagination(v PaginationMetadata) {
	o.Pagination = &v
}

func (o GetInstanceTypesSuccess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInstanceTypesSuccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.StatusCode) {
		toSerialize["status_code"] = o.StatusCode
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.No) {
		toSerialize["no"] = o.No
	}
	if !IsNil(o.InstanceTypes) {
		toSerialize["instance_types"] = o.InstanceTypes
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetInstanceTypesSuccess) UnmarshalJSON(data []byte) (err error) {
	varGetInstanceTypesSuccess := _GetInstanceTypesSuccess{}

	err = json.Unmarshal(data, &varGetInstanceTypesSuccess)

	if err != nil {
		return err
	}

	*o = GetInstanceTypesSuccess(varGetInstanceTypesSuccess)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		delete(additionalProperties, "message")
		delete(additionalProperties, "detail")
		delete(additionalProperties, "status_code")
		delete(additionalProperties, "limit")
		delete(additionalProperties, "no")
		delete(additionalProperties, "instance_types")
		delete(additionalProperties, "pagination")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetInstanceTypesSuccess struct {
	value *GetInstanceTypesSuccess
	isSet bool
}

func (v NullableGetInstanceTypesSuccess) Get() *GetInstanceTypesSuccess {
	return v.value
}

func (v *NullableGetInstanceTypesSuccess) Set(val *GetInstanceTypesSuccess) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInstanceTypesSuccess) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInstanceTypesSuccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInstanceTypesSuccess(val *GetInstanceTypesSuccess) *NullableGetInstanceTypesSuccess {
	return &NullableGetInstanceTypesSuccess{value: val, isSet: true}
}

func (v NullableGetInstanceTypesSuccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInstanceTypesSuccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


