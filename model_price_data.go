/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
)

// checks if the PriceData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceData{}

// PriceData Represents price data for a specific item.
type PriceData struct {
	UnitPrice *string `json:"unit_price,omitempty"`
	Currency *Currency `json:"currency,omitempty"`
	Granularity *BillingGranularity `json:"granularity,omitempty"`
	ProviderBillingGranularity *BillingGranularity `json:"provider_billing_granularity,omitempty"`
}

// NewPriceData instantiates a new PriceData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceData() *PriceData {
	this := PriceData{}
	var currency Currency = UNDEFINED
	this.Currency = &currency
	var granularity BillingGranularity = UNDEFINED
	this.Granularity = &granularity
	var providerBillingGranularity BillingGranularity = UNDEFINED
	this.ProviderBillingGranularity = &providerBillingGranularity
	return &this
}

// NewPriceDataWithDefaults instantiates a new PriceData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceDataWithDefaults() *PriceData {
	this := PriceData{}
	var currency Currency = UNDEFINED
	this.Currency = &currency
	var granularity BillingGranularity = UNDEFINED
	this.Granularity = &granularity
	var providerBillingGranularity BillingGranularity = UNDEFINED
	this.ProviderBillingGranularity = &providerBillingGranularity
	return &this
}

// GetUnitPrice returns the UnitPrice field value if set, zero value otherwise.
func (o *PriceData) GetUnitPrice() string {
	if o == nil || IsNil(o.UnitPrice) {
		var ret string
		return ret
	}
	return *o.UnitPrice
}

// GetUnitPriceOk returns a tuple with the UnitPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceData) GetUnitPriceOk() (*string, bool) {
	if o == nil || IsNil(o.UnitPrice) {
		return nil, false
	}
	return o.UnitPrice, true
}

// HasUnitPrice returns a boolean if a field has been set.
func (o *PriceData) HasUnitPrice() bool {
	if o != nil && !IsNil(o.UnitPrice) {
		return true
	}

	return false
}

// SetUnitPrice gets a reference to the given string and assigns it to the UnitPrice field.
func (o *PriceData) SetUnitPrice(v string) {
	o.UnitPrice = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PriceData) GetCurrency() Currency {
	if o == nil || IsNil(o.Currency) {
		var ret Currency
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceData) GetCurrencyOk() (*Currency, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PriceData) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given Currency and assigns it to the Currency field.
func (o *PriceData) SetCurrency(v Currency) {
	o.Currency = &v
}

// GetGranularity returns the Granularity field value if set, zero value otherwise.
func (o *PriceData) GetGranularity() BillingGranularity {
	if o == nil || IsNil(o.Granularity) {
		var ret BillingGranularity
		return ret
	}
	return *o.Granularity
}

// GetGranularityOk returns a tuple with the Granularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceData) GetGranularityOk() (*BillingGranularity, bool) {
	if o == nil || IsNil(o.Granularity) {
		return nil, false
	}
	return o.Granularity, true
}

// HasGranularity returns a boolean if a field has been set.
func (o *PriceData) HasGranularity() bool {
	if o != nil && !IsNil(o.Granularity) {
		return true
	}

	return false
}

// SetGranularity gets a reference to the given BillingGranularity and assigns it to the Granularity field.
func (o *PriceData) SetGranularity(v BillingGranularity) {
	o.Granularity = &v
}

// GetProviderBillingGranularity returns the ProviderBillingGranularity field value if set, zero value otherwise.
func (o *PriceData) GetProviderBillingGranularity() BillingGranularity {
	if o == nil || IsNil(o.ProviderBillingGranularity) {
		var ret BillingGranularity
		return ret
	}
	return *o.ProviderBillingGranularity
}

// GetProviderBillingGranularityOk returns a tuple with the ProviderBillingGranularity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceData) GetProviderBillingGranularityOk() (*BillingGranularity, bool) {
	if o == nil || IsNil(o.ProviderBillingGranularity) {
		return nil, false
	}
	return o.ProviderBillingGranularity, true
}

// HasProviderBillingGranularity returns a boolean if a field has been set.
func (o *PriceData) HasProviderBillingGranularity() bool {
	if o != nil && !IsNil(o.ProviderBillingGranularity) {
		return true
	}

	return false
}

// SetProviderBillingGranularity gets a reference to the given BillingGranularity and assigns it to the ProviderBillingGranularity field.
func (o *PriceData) SetProviderBillingGranularity(v BillingGranularity) {
	o.ProviderBillingGranularity = &v
}

func (o PriceData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UnitPrice) {
		toSerialize["unit_price"] = o.UnitPrice
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Granularity) {
		toSerialize["granularity"] = o.Granularity
	}
	if !IsNil(o.ProviderBillingGranularity) {
		toSerialize["provider_billing_granularity"] = o.ProviderBillingGranularity
	}
	return toSerialize, nil
}

type NullablePriceData struct {
	value *PriceData
	isSet bool
}

func (v NullablePriceData) Get() *PriceData {
	return v.value
}

func (v *NullablePriceData) Set(val *PriceData) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceData) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceData(val *PriceData) *NullablePriceData {
	return &NullablePriceData{value: val, isSet: true}
}

func (v NullablePriceData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


