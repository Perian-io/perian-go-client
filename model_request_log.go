/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the RequestLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestLog{}

// RequestLog struct for RequestLog
type RequestLog struct {
	Id NullableString `json:"id,omitempty"`
	OrganizationId string `json:"organization_id"`
	Timestamp time.Time `json:"timestamp"`
	Outcome NullableString `json:"outcome,omitempty"`
	Ip NullableString `json:"ip,omitempty"`
	UserAgent NullableString `json:"user_agent,omitempty"`
	RequestUrl NullableString `json:"request_url,omitempty"`
	RequestMethod NullableString `json:"request_method,omitempty"`
	RequestPayload NullableString `json:"request_payload,omitempty"`
	ResponseStatusCode NullableInt32 `json:"response_status_code,omitempty"`
	ResponseBody NullableString `json:"response_body,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RequestLog RequestLog

// NewRequestLog instantiates a new RequestLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestLog(organizationId string, timestamp time.Time) *RequestLog {
	this := RequestLog{}
	this.OrganizationId = organizationId
	this.Timestamp = timestamp
	return &this
}

// NewRequestLogWithDefaults instantiates a new RequestLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestLogWithDefaults() *RequestLog {
	this := RequestLog{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestLog) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestLog) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *RequestLog) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *RequestLog) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *RequestLog) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *RequestLog) UnsetId() {
	o.Id.Unset()
}

// GetOrganizationId returns the OrganizationId field value
func (o *RequestLog) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *RequestLog) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *RequestLog) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetTimestamp returns the Timestamp field value
func (o *RequestLog) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *RequestLog) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *RequestLog) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetOutcome returns the Outcome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestLog) GetOutcome() string {
	if o == nil || IsNil(o.Outcome.Get()) {
		var ret string
		return ret
	}
	return *o.Outcome.Get()
}

// GetOutcomeOk returns a tuple with the Outcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestLog) GetOutcomeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Outcome.Get(), o.Outcome.IsSet()
}

// HasOutcome returns a boolean if a field has been set.
func (o *RequestLog) HasOutcome() bool {
	if o != nil && o.Outcome.IsSet() {
		return true
	}

	return false
}

// SetOutcome gets a reference to the given NullableString and assigns it to the Outcome field.
func (o *RequestLog) SetOutcome(v string) {
	o.Outcome.Set(&v)
}
// SetOutcomeNil sets the value for Outcome to be an explicit nil
func (o *RequestLog) SetOutcomeNil() {
	o.Outcome.Set(nil)
}

// UnsetOutcome ensures that no value is present for Outcome, not even an explicit nil
func (o *RequestLog) UnsetOutcome() {
	o.Outcome.Unset()
}

// GetIp returns the Ip field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestLog) GetIp() string {
	if o == nil || IsNil(o.Ip.Get()) {
		var ret string
		return ret
	}
	return *o.Ip.Get()
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestLog) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ip.Get(), o.Ip.IsSet()
}

// HasIp returns a boolean if a field has been set.
func (o *RequestLog) HasIp() bool {
	if o != nil && o.Ip.IsSet() {
		return true
	}

	return false
}

// SetIp gets a reference to the given NullableString and assigns it to the Ip field.
func (o *RequestLog) SetIp(v string) {
	o.Ip.Set(&v)
}
// SetIpNil sets the value for Ip to be an explicit nil
func (o *RequestLog) SetIpNil() {
	o.Ip.Set(nil)
}

// UnsetIp ensures that no value is present for Ip, not even an explicit nil
func (o *RequestLog) UnsetIp() {
	o.Ip.Unset()
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestLog) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent.Get()) {
		var ret string
		return ret
	}
	return *o.UserAgent.Get()
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestLog) GetUserAgentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserAgent.Get(), o.UserAgent.IsSet()
}

// HasUserAgent returns a boolean if a field has been set.
func (o *RequestLog) HasUserAgent() bool {
	if o != nil && o.UserAgent.IsSet() {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given NullableString and assigns it to the UserAgent field.
func (o *RequestLog) SetUserAgent(v string) {
	o.UserAgent.Set(&v)
}
// SetUserAgentNil sets the value for UserAgent to be an explicit nil
func (o *RequestLog) SetUserAgentNil() {
	o.UserAgent.Set(nil)
}

// UnsetUserAgent ensures that no value is present for UserAgent, not even an explicit nil
func (o *RequestLog) UnsetUserAgent() {
	o.UserAgent.Unset()
}

// GetRequestUrl returns the RequestUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestLog) GetRequestUrl() string {
	if o == nil || IsNil(o.RequestUrl.Get()) {
		var ret string
		return ret
	}
	return *o.RequestUrl.Get()
}

// GetRequestUrlOk returns a tuple with the RequestUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestLog) GetRequestUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestUrl.Get(), o.RequestUrl.IsSet()
}

// HasRequestUrl returns a boolean if a field has been set.
func (o *RequestLog) HasRequestUrl() bool {
	if o != nil && o.RequestUrl.IsSet() {
		return true
	}

	return false
}

// SetRequestUrl gets a reference to the given NullableString and assigns it to the RequestUrl field.
func (o *RequestLog) SetRequestUrl(v string) {
	o.RequestUrl.Set(&v)
}
// SetRequestUrlNil sets the value for RequestUrl to be an explicit nil
func (o *RequestLog) SetRequestUrlNil() {
	o.RequestUrl.Set(nil)
}

// UnsetRequestUrl ensures that no value is present for RequestUrl, not even an explicit nil
func (o *RequestLog) UnsetRequestUrl() {
	o.RequestUrl.Unset()
}

// GetRequestMethod returns the RequestMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestLog) GetRequestMethod() string {
	if o == nil || IsNil(o.RequestMethod.Get()) {
		var ret string
		return ret
	}
	return *o.RequestMethod.Get()
}

// GetRequestMethodOk returns a tuple with the RequestMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestLog) GetRequestMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestMethod.Get(), o.RequestMethod.IsSet()
}

// HasRequestMethod returns a boolean if a field has been set.
func (o *RequestLog) HasRequestMethod() bool {
	if o != nil && o.RequestMethod.IsSet() {
		return true
	}

	return false
}

// SetRequestMethod gets a reference to the given NullableString and assigns it to the RequestMethod field.
func (o *RequestLog) SetRequestMethod(v string) {
	o.RequestMethod.Set(&v)
}
// SetRequestMethodNil sets the value for RequestMethod to be an explicit nil
func (o *RequestLog) SetRequestMethodNil() {
	o.RequestMethod.Set(nil)
}

// UnsetRequestMethod ensures that no value is present for RequestMethod, not even an explicit nil
func (o *RequestLog) UnsetRequestMethod() {
	o.RequestMethod.Unset()
}

// GetRequestPayload returns the RequestPayload field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestLog) GetRequestPayload() string {
	if o == nil || IsNil(o.RequestPayload.Get()) {
		var ret string
		return ret
	}
	return *o.RequestPayload.Get()
}

// GetRequestPayloadOk returns a tuple with the RequestPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestLog) GetRequestPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestPayload.Get(), o.RequestPayload.IsSet()
}

// HasRequestPayload returns a boolean if a field has been set.
func (o *RequestLog) HasRequestPayload() bool {
	if o != nil && o.RequestPayload.IsSet() {
		return true
	}

	return false
}

// SetRequestPayload gets a reference to the given NullableString and assigns it to the RequestPayload field.
func (o *RequestLog) SetRequestPayload(v string) {
	o.RequestPayload.Set(&v)
}
// SetRequestPayloadNil sets the value for RequestPayload to be an explicit nil
func (o *RequestLog) SetRequestPayloadNil() {
	o.RequestPayload.Set(nil)
}

// UnsetRequestPayload ensures that no value is present for RequestPayload, not even an explicit nil
func (o *RequestLog) UnsetRequestPayload() {
	o.RequestPayload.Unset()
}

// GetResponseStatusCode returns the ResponseStatusCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestLog) GetResponseStatusCode() int32 {
	if o == nil || IsNil(o.ResponseStatusCode.Get()) {
		var ret int32
		return ret
	}
	return *o.ResponseStatusCode.Get()
}

// GetResponseStatusCodeOk returns a tuple with the ResponseStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestLog) GetResponseStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseStatusCode.Get(), o.ResponseStatusCode.IsSet()
}

// HasResponseStatusCode returns a boolean if a field has been set.
func (o *RequestLog) HasResponseStatusCode() bool {
	if o != nil && o.ResponseStatusCode.IsSet() {
		return true
	}

	return false
}

// SetResponseStatusCode gets a reference to the given NullableInt32 and assigns it to the ResponseStatusCode field.
func (o *RequestLog) SetResponseStatusCode(v int32) {
	o.ResponseStatusCode.Set(&v)
}
// SetResponseStatusCodeNil sets the value for ResponseStatusCode to be an explicit nil
func (o *RequestLog) SetResponseStatusCodeNil() {
	o.ResponseStatusCode.Set(nil)
}

// UnsetResponseStatusCode ensures that no value is present for ResponseStatusCode, not even an explicit nil
func (o *RequestLog) UnsetResponseStatusCode() {
	o.ResponseStatusCode.Unset()
}

// GetResponseBody returns the ResponseBody field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RequestLog) GetResponseBody() string {
	if o == nil || IsNil(o.ResponseBody.Get()) {
		var ret string
		return ret
	}
	return *o.ResponseBody.Get()
}

// GetResponseBodyOk returns a tuple with the ResponseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RequestLog) GetResponseBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResponseBody.Get(), o.ResponseBody.IsSet()
}

// HasResponseBody returns a boolean if a field has been set.
func (o *RequestLog) HasResponseBody() bool {
	if o != nil && o.ResponseBody.IsSet() {
		return true
	}

	return false
}

// SetResponseBody gets a reference to the given NullableString and assigns it to the ResponseBody field.
func (o *RequestLog) SetResponseBody(v string) {
	o.ResponseBody.Set(&v)
}
// SetResponseBodyNil sets the value for ResponseBody to be an explicit nil
func (o *RequestLog) SetResponseBodyNil() {
	o.ResponseBody.Set(nil)
}

// UnsetResponseBody ensures that no value is present for ResponseBody, not even an explicit nil
func (o *RequestLog) UnsetResponseBody() {
	o.ResponseBody.Unset()
}

func (o RequestLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	toSerialize["organization_id"] = o.OrganizationId
	toSerialize["timestamp"] = o.Timestamp
	if o.Outcome.IsSet() {
		toSerialize["outcome"] = o.Outcome.Get()
	}
	if o.Ip.IsSet() {
		toSerialize["ip"] = o.Ip.Get()
	}
	if o.UserAgent.IsSet() {
		toSerialize["user_agent"] = o.UserAgent.Get()
	}
	if o.RequestUrl.IsSet() {
		toSerialize["request_url"] = o.RequestUrl.Get()
	}
	if o.RequestMethod.IsSet() {
		toSerialize["request_method"] = o.RequestMethod.Get()
	}
	if o.RequestPayload.IsSet() {
		toSerialize["request_payload"] = o.RequestPayload.Get()
	}
	if o.ResponseStatusCode.IsSet() {
		toSerialize["response_status_code"] = o.ResponseStatusCode.Get()
	}
	if o.ResponseBody.IsSet() {
		toSerialize["response_body"] = o.ResponseBody.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RequestLog) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"organization_id",
		"timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRequestLog := _RequestLog{}

	err = json.Unmarshal(data, &varRequestLog)

	if err != nil {
		return err
	}

	*o = RequestLog(varRequestLog)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "organization_id")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "outcome")
		delete(additionalProperties, "ip")
		delete(additionalProperties, "user_agent")
		delete(additionalProperties, "request_url")
		delete(additionalProperties, "request_method")
		delete(additionalProperties, "request_payload")
		delete(additionalProperties, "response_status_code")
		delete(additionalProperties, "response_body")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRequestLog struct {
	value *RequestLog
	isSet bool
}

func (v NullableRequestLog) Get() *RequestLog {
	return v.value
}

func (v *NullableRequestLog) Set(val *RequestLog) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestLog) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestLog(val *RequestLog) *NullableRequestLog {
	return &NullableRequestLog{value: val, isSet: true}
}

func (v NullableRequestLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


