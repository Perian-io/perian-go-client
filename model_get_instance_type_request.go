/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
)

// checks if the GetInstanceTypeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInstanceTypeRequest{}

// GetInstanceTypeRequest Request model for getting instance types.
type GetInstanceTypeRequest struct {
	InstanceTypeQuery *InstanceTyperQueryView `json:"instance_type_query,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetInstanceTypeRequest GetInstanceTypeRequest

// NewGetInstanceTypeRequest instantiates a new GetInstanceTypeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInstanceTypeRequest() *GetInstanceTypeRequest {
	this := GetInstanceTypeRequest{}
	return &this
}

// NewGetInstanceTypeRequestWithDefaults instantiates a new GetInstanceTypeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInstanceTypeRequestWithDefaults() *GetInstanceTypeRequest {
	this := GetInstanceTypeRequest{}
	return &this
}

// GetInstanceTypeQuery returns the InstanceTypeQuery field value if set, zero value otherwise.
func (o *GetInstanceTypeRequest) GetInstanceTypeQuery() InstanceTyperQueryView {
	if o == nil || IsNil(o.InstanceTypeQuery) {
		var ret InstanceTyperQueryView
		return ret
	}
	return *o.InstanceTypeQuery
}

// GetInstanceTypeQueryOk returns a tuple with the InstanceTypeQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInstanceTypeRequest) GetInstanceTypeQueryOk() (*InstanceTyperQueryView, bool) {
	if o == nil || IsNil(o.InstanceTypeQuery) {
		return nil, false
	}
	return o.InstanceTypeQuery, true
}

// HasInstanceTypeQuery returns a boolean if a field has been set.
func (o *GetInstanceTypeRequest) HasInstanceTypeQuery() bool {
	if o != nil && !IsNil(o.InstanceTypeQuery) {
		return true
	}

	return false
}

// SetInstanceTypeQuery gets a reference to the given InstanceTyperQueryView and assigns it to the InstanceTypeQuery field.
func (o *GetInstanceTypeRequest) SetInstanceTypeQuery(v InstanceTyperQueryView) {
	o.InstanceTypeQuery = &v
}

func (o GetInstanceTypeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInstanceTypeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceTypeQuery) {
		toSerialize["instance_type_query"] = o.InstanceTypeQuery
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetInstanceTypeRequest) UnmarshalJSON(data []byte) (err error) {
	varGetInstanceTypeRequest := _GetInstanceTypeRequest{}

	err = json.Unmarshal(data, &varGetInstanceTypeRequest)

	if err != nil {
		return err
	}

	*o = GetInstanceTypeRequest(varGetInstanceTypeRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "instance_type_query")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetInstanceTypeRequest struct {
	value *GetInstanceTypeRequest
	isSet bool
}

func (v NullableGetInstanceTypeRequest) Get() *GetInstanceTypeRequest {
	return v.value
}

func (v *NullableGetInstanceTypeRequest) Set(val *GetInstanceTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInstanceTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInstanceTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInstanceTypeRequest(val *GetInstanceTypeRequest) *NullableGetInstanceTypeRequest {
	return &NullableGetInstanceTypeRequest{value: val, isSet: true}
}

func (v NullableGetInstanceTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInstanceTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


