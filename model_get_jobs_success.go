/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
)

// checks if the GetJobsSuccess type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetJobsSuccess{}

// GetJobsSuccess Success response for Job creation.
type GetJobsSuccess struct {
	Status *string `json:"status,omitempty"`
	Message *string `json:"message,omitempty"`
	Detail *string `json:"detail,omitempty"`
	StatusCode *int32 `json:"status_code,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	No *int32 `json:"no,omitempty"`
	Jobs []JobView `json:"jobs,omitempty"`
	Pagination *PaginationMetadata `json:"pagination,omitempty"`
}

// NewGetJobsSuccess instantiates a new GetJobsSuccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetJobsSuccess() *GetJobsSuccess {
	this := GetJobsSuccess{}
	var status string = "Success"
	this.Status = &status
	var message string = "Operation was successful"
	this.Message = &message
	var detail string = ""
	this.Detail = &detail
	var statusCode int32 = 200
	this.StatusCode = &statusCode
	var limit int32 = 0
	this.Limit = &limit
	var no int32 = 0
	this.No = &no
	var pagination PaginationMetadata = {total_items=0, items_per_page=25, current_page=1, total_pages=1, next_page=1}
	this.Pagination = &pagination
	return &this
}

// NewGetJobsSuccessWithDefaults instantiates a new GetJobsSuccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetJobsSuccessWithDefaults() *GetJobsSuccess {
	this := GetJobsSuccess{}
	var status string = "Success"
	this.Status = &status
	var message string = "Operation was successful"
	this.Message = &message
	var detail string = ""
	this.Detail = &detail
	var statusCode int32 = 200
	this.StatusCode = &statusCode
	var limit int32 = 0
	this.Limit = &limit
	var no int32 = 0
	this.No = &no
	var pagination PaginationMetadata = {total_items=0, items_per_page=25, current_page=1, total_pages=1, next_page=1}
	this.Pagination = &pagination
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetJobsSuccess) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetJobsSuccess) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetJobsSuccess) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetJobsSuccess) SetStatus(v string) {
	o.Status = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GetJobsSuccess) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetJobsSuccess) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GetJobsSuccess) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GetJobsSuccess) SetMessage(v string) {
	o.Message = &v
}

// GetDetail returns the Detail field value if set, zero value otherwise.
func (o *GetJobsSuccess) GetDetail() string {
	if o == nil || IsNil(o.Detail) {
		var ret string
		return ret
	}
	return *o.Detail
}

// GetDetailOk returns a tuple with the Detail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetJobsSuccess) GetDetailOk() (*string, bool) {
	if o == nil || IsNil(o.Detail) {
		return nil, false
	}
	return o.Detail, true
}

// HasDetail returns a boolean if a field has been set.
func (o *GetJobsSuccess) HasDetail() bool {
	if o != nil && !IsNil(o.Detail) {
		return true
	}

	return false
}

// SetDetail gets a reference to the given string and assigns it to the Detail field.
func (o *GetJobsSuccess) SetDetail(v string) {
	o.Detail = &v
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *GetJobsSuccess) GetStatusCode() int32 {
	if o == nil || IsNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetJobsSuccess) GetStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *GetJobsSuccess) HasStatusCode() bool {
	if o != nil && !IsNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *GetJobsSuccess) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *GetJobsSuccess) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetJobsSuccess) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *GetJobsSuccess) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *GetJobsSuccess) SetLimit(v int32) {
	o.Limit = &v
}

// GetNo returns the No field value if set, zero value otherwise.
func (o *GetJobsSuccess) GetNo() int32 {
	if o == nil || IsNil(o.No) {
		var ret int32
		return ret
	}
	return *o.No
}

// GetNoOk returns a tuple with the No field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetJobsSuccess) GetNoOk() (*int32, bool) {
	if o == nil || IsNil(o.No) {
		return nil, false
	}
	return o.No, true
}

// HasNo returns a boolean if a field has been set.
func (o *GetJobsSuccess) HasNo() bool {
	if o != nil && !IsNil(o.No) {
		return true
	}

	return false
}

// SetNo gets a reference to the given int32 and assigns it to the No field.
func (o *GetJobsSuccess) SetNo(v int32) {
	o.No = &v
}

// GetJobs returns the Jobs field value if set, zero value otherwise.
func (o *GetJobsSuccess) GetJobs() []JobView {
	if o == nil || IsNil(o.Jobs) {
		var ret []JobView
		return ret
	}
	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetJobsSuccess) GetJobsOk() ([]JobView, bool) {
	if o == nil || IsNil(o.Jobs) {
		return nil, false
	}
	return o.Jobs, true
}

// HasJobs returns a boolean if a field has been set.
func (o *GetJobsSuccess) HasJobs() bool {
	if o != nil && !IsNil(o.Jobs) {
		return true
	}

	return false
}

// SetJobs gets a reference to the given []JobView and assigns it to the Jobs field.
func (o *GetJobsSuccess) SetJobs(v []JobView) {
	o.Jobs = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *GetJobsSuccess) GetPagination() PaginationMetadata {
	if o == nil || IsNil(o.Pagination) {
		var ret PaginationMetadata
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetJobsSuccess) GetPaginationOk() (*PaginationMetadata, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *GetJobsSuccess) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given PaginationMetadata and assigns it to the Pagination field.
func (o *GetJobsSuccess) SetPagination(v PaginationMetadata) {
	o.Pagination = &v
}

func (o GetJobsSuccess) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetJobsSuccess) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Detail) {
		toSerialize["detail"] = o.Detail
	}
	if !IsNil(o.StatusCode) {
		toSerialize["status_code"] = o.StatusCode
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.No) {
		toSerialize["no"] = o.No
	}
	if !IsNil(o.Jobs) {
		toSerialize["jobs"] = o.Jobs
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableGetJobsSuccess struct {
	value *GetJobsSuccess
	isSet bool
}

func (v NullableGetJobsSuccess) Get() *GetJobsSuccess {
	return v.value
}

func (v *NullableGetJobsSuccess) Set(val *GetJobsSuccess) {
	v.value = val
	v.isSet = true
}

func (v NullableGetJobsSuccess) IsSet() bool {
	return v.isSet
}

func (v *NullableGetJobsSuccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetJobsSuccess(val *GetJobsSuccess) *NullableGetJobsSuccess {
	return &NullableGetJobsSuccess{value: val, isSet: true}
}

func (v NullableGetJobsSuccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetJobsSuccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


