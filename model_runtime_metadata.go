/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
)

// checks if the RuntimeMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuntimeMetadata{}

// RuntimeMetadata JSON schema for the runtime_metadata json column.
type RuntimeMetadata struct {
	InstanceTypeId NullableString `json:"instance_type_id,omitempty"`
	AutoFailoverInstanceType *bool `json:"auto_failover_instance_type,omitempty"`
	TimeoutSeconds NullableInt32 `json:"timeout_seconds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RuntimeMetadata RuntimeMetadata

// NewRuntimeMetadata instantiates a new RuntimeMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuntimeMetadata() *RuntimeMetadata {
	this := RuntimeMetadata{}
	var autoFailoverInstanceType bool = false
	this.AutoFailoverInstanceType = &autoFailoverInstanceType
	return &this
}

// NewRuntimeMetadataWithDefaults instantiates a new RuntimeMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuntimeMetadataWithDefaults() *RuntimeMetadata {
	this := RuntimeMetadata{}
	var autoFailoverInstanceType bool = false
	this.AutoFailoverInstanceType = &autoFailoverInstanceType
	return &this
}

// GetInstanceTypeId returns the InstanceTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RuntimeMetadata) GetInstanceTypeId() string {
	if o == nil || IsNil(o.InstanceTypeId.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceTypeId.Get()
}

// GetInstanceTypeIdOk returns a tuple with the InstanceTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RuntimeMetadata) GetInstanceTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceTypeId.Get(), o.InstanceTypeId.IsSet()
}

// HasInstanceTypeId returns a boolean if a field has been set.
func (o *RuntimeMetadata) HasInstanceTypeId() bool {
	if o != nil && o.InstanceTypeId.IsSet() {
		return true
	}

	return false
}

// SetInstanceTypeId gets a reference to the given NullableString and assigns it to the InstanceTypeId field.
func (o *RuntimeMetadata) SetInstanceTypeId(v string) {
	o.InstanceTypeId.Set(&v)
}
// SetInstanceTypeIdNil sets the value for InstanceTypeId to be an explicit nil
func (o *RuntimeMetadata) SetInstanceTypeIdNil() {
	o.InstanceTypeId.Set(nil)
}

// UnsetInstanceTypeId ensures that no value is present for InstanceTypeId, not even an explicit nil
func (o *RuntimeMetadata) UnsetInstanceTypeId() {
	o.InstanceTypeId.Unset()
}

// GetAutoFailoverInstanceType returns the AutoFailoverInstanceType field value if set, zero value otherwise.
func (o *RuntimeMetadata) GetAutoFailoverInstanceType() bool {
	if o == nil || IsNil(o.AutoFailoverInstanceType) {
		var ret bool
		return ret
	}
	return *o.AutoFailoverInstanceType
}

// GetAutoFailoverInstanceTypeOk returns a tuple with the AutoFailoverInstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuntimeMetadata) GetAutoFailoverInstanceTypeOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoFailoverInstanceType) {
		return nil, false
	}
	return o.AutoFailoverInstanceType, true
}

// HasAutoFailoverInstanceType returns a boolean if a field has been set.
func (o *RuntimeMetadata) HasAutoFailoverInstanceType() bool {
	if o != nil && !IsNil(o.AutoFailoverInstanceType) {
		return true
	}

	return false
}

// SetAutoFailoverInstanceType gets a reference to the given bool and assigns it to the AutoFailoverInstanceType field.
func (o *RuntimeMetadata) SetAutoFailoverInstanceType(v bool) {
	o.AutoFailoverInstanceType = &v
}

// GetTimeoutSeconds returns the TimeoutSeconds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RuntimeMetadata) GetTimeoutSeconds() int32 {
	if o == nil || IsNil(o.TimeoutSeconds.Get()) {
		var ret int32
		return ret
	}
	return *o.TimeoutSeconds.Get()
}

// GetTimeoutSecondsOk returns a tuple with the TimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RuntimeMetadata) GetTimeoutSecondsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeoutSeconds.Get(), o.TimeoutSeconds.IsSet()
}

// HasTimeoutSeconds returns a boolean if a field has been set.
func (o *RuntimeMetadata) HasTimeoutSeconds() bool {
	if o != nil && o.TimeoutSeconds.IsSet() {
		return true
	}

	return false
}

// SetTimeoutSeconds gets a reference to the given NullableInt32 and assigns it to the TimeoutSeconds field.
func (o *RuntimeMetadata) SetTimeoutSeconds(v int32) {
	o.TimeoutSeconds.Set(&v)
}
// SetTimeoutSecondsNil sets the value for TimeoutSeconds to be an explicit nil
func (o *RuntimeMetadata) SetTimeoutSecondsNil() {
	o.TimeoutSeconds.Set(nil)
}

// UnsetTimeoutSeconds ensures that no value is present for TimeoutSeconds, not even an explicit nil
func (o *RuntimeMetadata) UnsetTimeoutSeconds() {
	o.TimeoutSeconds.Unset()
}

func (o RuntimeMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuntimeMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.InstanceTypeId.IsSet() {
		toSerialize["instance_type_id"] = o.InstanceTypeId.Get()
	}
	if !IsNil(o.AutoFailoverInstanceType) {
		toSerialize["auto_failover_instance_type"] = o.AutoFailoverInstanceType
	}
	if o.TimeoutSeconds.IsSet() {
		toSerialize["timeout_seconds"] = o.TimeoutSeconds.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RuntimeMetadata) UnmarshalJSON(data []byte) (err error) {
	varRuntimeMetadata := _RuntimeMetadata{}

	err = json.Unmarshal(data, &varRuntimeMetadata)

	if err != nil {
		return err
	}

	*o = RuntimeMetadata(varRuntimeMetadata)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "instance_type_id")
		delete(additionalProperties, "auto_failover_instance_type")
		delete(additionalProperties, "timeout_seconds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRuntimeMetadata struct {
	value *RuntimeMetadata
	isSet bool
}

func (v NullableRuntimeMetadata) Get() *RuntimeMetadata {
	return v.value
}

func (v *NullableRuntimeMetadata) Set(val *RuntimeMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableRuntimeMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableRuntimeMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuntimeMetadata(val *RuntimeMetadata) *NullableRuntimeMetadata {
	return &NullableRuntimeMetadata{value: val, isSet: true}
}

func (v NullableRuntimeMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuntimeMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


