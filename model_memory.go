/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
)

// checks if the Memory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Memory{}

// Memory Represents a memory object.
type Memory struct {
	Size *string `json:"size,omitempty"`
	Unit *MemoryUnit `json:"unit,omitempty"`
	Bandwidth *Bandwidth `json:"bandwidth,omitempty"`
	Interface *MemoryInterface `json:"interface,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Memory Memory

// NewMemory instantiates a new Memory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemory() *Memory {
	this := Memory{}
	var unit MemoryUnit = MEMORYUNIT_GB
	this.Unit = &unit
	var bandwidth Bandwidth = *NewBandwidth()
	this.Bandwidth = &bandwidth
	var interface_ MemoryInterface = MEMORYINTERFACE_UNDEFINED
	this.Interface = &interface_
	return &this
}

// NewMemoryWithDefaults instantiates a new Memory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemoryWithDefaults() *Memory {
	this := Memory{}
	var unit MemoryUnit = MEMORYUNIT_GB
	this.Unit = &unit
	var bandwidth Bandwidth = *NewBandwidth()
	this.Bandwidth = &bandwidth
	var interface_ MemoryInterface = MEMORYINTERFACE_UNDEFINED
	this.Interface = &interface_
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *Memory) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Memory) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *Memory) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *Memory) SetSize(v string) {
	o.Size = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *Memory) GetUnit() MemoryUnit {
	if o == nil || IsNil(o.Unit) {
		var ret MemoryUnit
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Memory) GetUnitOk() (*MemoryUnit, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *Memory) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given MemoryUnit and assigns it to the Unit field.
func (o *Memory) SetUnit(v MemoryUnit) {
	o.Unit = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *Memory) GetBandwidth() Bandwidth {
	if o == nil || IsNil(o.Bandwidth) {
		var ret Bandwidth
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Memory) GetBandwidthOk() (*Bandwidth, bool) {
	if o == nil || IsNil(o.Bandwidth) {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *Memory) HasBandwidth() bool {
	if o != nil && !IsNil(o.Bandwidth) {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given Bandwidth and assigns it to the Bandwidth field.
func (o *Memory) SetBandwidth(v Bandwidth) {
	o.Bandwidth = &v
}

// GetInterface returns the Interface field value if set, zero value otherwise.
func (o *Memory) GetInterface() MemoryInterface {
	if o == nil || IsNil(o.Interface) {
		var ret MemoryInterface
		return ret
	}
	return *o.Interface
}

// GetInterfaceOk returns a tuple with the Interface field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Memory) GetInterfaceOk() (*MemoryInterface, bool) {
	if o == nil || IsNil(o.Interface) {
		return nil, false
	}
	return o.Interface, true
}

// HasInterface returns a boolean if a field has been set.
func (o *Memory) HasInterface() bool {
	if o != nil && !IsNil(o.Interface) {
		return true
	}

	return false
}

// SetInterface gets a reference to the given MemoryInterface and assigns it to the Interface field.
func (o *Memory) SetInterface(v MemoryInterface) {
	o.Interface = &v
}

func (o Memory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Memory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.Bandwidth) {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if !IsNil(o.Interface) {
		toSerialize["interface"] = o.Interface
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Memory) UnmarshalJSON(data []byte) (err error) {
	varMemory := _Memory{}

	err = json.Unmarshal(data, &varMemory)

	if err != nil {
		return err
	}

	*o = Memory(varMemory)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "size")
		delete(additionalProperties, "unit")
		delete(additionalProperties, "bandwidth")
		delete(additionalProperties, "interface")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMemory struct {
	value *Memory
	isSet bool
}

func (v NullableMemory) Get() *Memory {
	return v.value
}

func (v *NullableMemory) Set(val *Memory) {
	v.value = val
	v.isSet = true
}

func (v NullableMemory) IsSet() bool {
	return v.isSet
}

func (v *NullableMemory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemory(val *Memory) *NullableMemory {
	return &NullableMemory{value: val, isSet: true}
}

func (v NullableMemory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


