/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
)

// checks if the Cpu type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Cpu{}

// Cpu struct for Cpu
type Cpu struct {
	Threads *int32 `json:"threads,omitempty"`
	Cores *int32 `json:"cores,omitempty"`
	Speed *Bandwidth `json:"speed,omitempty"`
}

// NewCpu instantiates a new Cpu object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpu() *Cpu {
	this := Cpu{}
	var threads int32 = 0
	this.Threads = &threads
	var cores int32 = 0
	this.Cores = &cores
	var speed Bandwidth = {speed=0.0, maximum=0.0, minimum=0.0, unit=Undefined, sla=Undefined, limit=Undefined}
	this.Speed = &speed
	return &this
}

// NewCpuWithDefaults instantiates a new Cpu object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpuWithDefaults() *Cpu {
	this := Cpu{}
	var threads int32 = 0
	this.Threads = &threads
	var cores int32 = 0
	this.Cores = &cores
	var speed Bandwidth = {speed=0.0, maximum=0.0, minimum=0.0, unit=Undefined, sla=Undefined, limit=Undefined}
	this.Speed = &speed
	return &this
}

// GetThreads returns the Threads field value if set, zero value otherwise.
func (o *Cpu) GetThreads() int32 {
	if o == nil || IsNil(o.Threads) {
		var ret int32
		return ret
	}
	return *o.Threads
}

// GetThreadsOk returns a tuple with the Threads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cpu) GetThreadsOk() (*int32, bool) {
	if o == nil || IsNil(o.Threads) {
		return nil, false
	}
	return o.Threads, true
}

// HasThreads returns a boolean if a field has been set.
func (o *Cpu) HasThreads() bool {
	if o != nil && !IsNil(o.Threads) {
		return true
	}

	return false
}

// SetThreads gets a reference to the given int32 and assigns it to the Threads field.
func (o *Cpu) SetThreads(v int32) {
	o.Threads = &v
}

// GetCores returns the Cores field value if set, zero value otherwise.
func (o *Cpu) GetCores() int32 {
	if o == nil || IsNil(o.Cores) {
		var ret int32
		return ret
	}
	return *o.Cores
}

// GetCoresOk returns a tuple with the Cores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cpu) GetCoresOk() (*int32, bool) {
	if o == nil || IsNil(o.Cores) {
		return nil, false
	}
	return o.Cores, true
}

// HasCores returns a boolean if a field has been set.
func (o *Cpu) HasCores() bool {
	if o != nil && !IsNil(o.Cores) {
		return true
	}

	return false
}

// SetCores gets a reference to the given int32 and assigns it to the Cores field.
func (o *Cpu) SetCores(v int32) {
	o.Cores = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *Cpu) GetSpeed() Bandwidth {
	if o == nil || IsNil(o.Speed) {
		var ret Bandwidth
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Cpu) GetSpeedOk() (*Bandwidth, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *Cpu) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given Bandwidth and assigns it to the Speed field.
func (o *Cpu) SetSpeed(v Bandwidth) {
	o.Speed = &v
}

func (o Cpu) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Cpu) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Threads) {
		toSerialize["threads"] = o.Threads
	}
	if !IsNil(o.Cores) {
		toSerialize["cores"] = o.Cores
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	return toSerialize, nil
}

type NullableCpu struct {
	value *Cpu
	isSet bool
}

func (v NullableCpu) Get() *Cpu {
	return v.value
}

func (v *NullableCpu) Set(val *Cpu) {
	v.value = val
	v.isSet = true
}

func (v NullableCpu) IsSet() bool {
	return v.isSet
}

func (v *NullableCpu) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpu(val *Cpu) *NullableCpu {
	return &NullableCpu{value: val, isSet: true}
}

func (v NullableCpu) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpu) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


