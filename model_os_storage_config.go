/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.2.8
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package perian

import (
	"encoding/json"
)

// checks if the OSStorageConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OSStorageConfig{}

// OSStorageConfig JSON schema for the storage field in the docker_run_parameters json column.
type OSStorageConfig struct {
	Size *int32 `json:"size,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OSStorageConfig OSStorageConfig

// NewOSStorageConfig instantiates a new OSStorageConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOSStorageConfig() *OSStorageConfig {
	this := OSStorageConfig{}
	var size int32 = 50
	this.Size = &size
	return &this
}

// NewOSStorageConfigWithDefaults instantiates a new OSStorageConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOSStorageConfigWithDefaults() *OSStorageConfig {
	this := OSStorageConfig{}
	var size int32 = 50
	this.Size = &size
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *OSStorageConfig) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OSStorageConfig) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *OSStorageConfig) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *OSStorageConfig) SetSize(v int32) {
	o.Size = &v
}

func (o OSStorageConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OSStorageConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OSStorageConfig) UnmarshalJSON(data []byte) (err error) {
	varOSStorageConfig := _OSStorageConfig{}

	err = json.Unmarshal(data, &varOSStorageConfig)

	if err != nil {
		return err
	}

	*o = OSStorageConfig(varOSStorageConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "size")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOSStorageConfig struct {
	value *OSStorageConfig
	isSet bool
}

func (v NullableOSStorageConfig) Get() *OSStorageConfig {
	return v.value
}

func (v *NullableOSStorageConfig) Set(val *OSStorageConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableOSStorageConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableOSStorageConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOSStorageConfig(val *OSStorageConfig) *NullableOSStorageConfig {
	return &NullableOSStorageConfig{value: val, isSet: true}
}

func (v NullableOSStorageConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOSStorageConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


